apiVersion: apps/v1
kind: Deployment
metadata:
  name: overops-server-deployment
  labels:
    app: overops-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: overops-server
  template:
    metadata:
      labels:
        app: overops-server
    spec:
      containers:
        - name: overops-server
          image: overops/server:grafana-latest
          ports:
            - containerPort: 8080
          env:
            - name: HOST_URL
              value: "overops-server-service"
            - name: FRONTEND_URL
              value: "https://poc-k8s.overops-samples.com"
            - name: DB_TYPE
              value: "mysql"
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: overops-server-db
                  key: url
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: overops-server-db
                  key: user
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: overops-server-db
                  key: pass
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "100m"
              memory: "1Gi"
            limits:
              cpu: "1000m"
              memory: "2Gi"
          volumeMounts:
            - mountPath: /opt/private
              name: overops-server-private-volume
            - mountPath: /opt/takipi-server/storage
              name: overops-server-data-volume
          livenessProbe:
            httpGet:
              path: /service/png
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
      volumes:
        - name: overops-server-private-volume
          secret:
            secretName: overops-server
        - name: overops-server-data-volume
          nfs:
            server: fs-cab39c2b.efs.us-east-1.amazonaws.com
            path: /poc-storage
---
kind: Service
apiVersion: v1
metadata:
  name: overops-server-service-ext
  labels:
    dns: route53
  annotations:
    domainName: "poc-k8s.overops-samples.com"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: |-
      arn:aws:acm:us-east-1:432746435694:certificate/b9abcc49-8e59-4797-ab8c-877a78ddb71f
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
spec:
  selector:
    app: overops-server
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 443
      targetPort: 8080
      name: https
---
kind: Service
apiVersion: v1
metadata:
  name: overops-server-service
spec:
  selector:
    app: overops-server
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080